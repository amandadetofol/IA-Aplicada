# -*- coding: utf-8 -*-
"""Análise de sentimento correta.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J7CWbdQjOPQFW6JdtCqXL1XMHVPbanCW
"""

# Commented out IPython magic to ensure Python compatibility.
#alunos: amanda constante, karoline custódio e matheus boing

from nltk.tag.sequential import NaiveBayesClassifier
import pandas as pd
import matplotlib as plt
import numpy as np
import nltk 
from nltk.tokenize import word_tokenize
nltk.download('stopwords')
nltk.download('punkt')
nltk.download('rslp')
# %matplotlib inline 

baseTreinamento = [("este trabalho é agradável", "alegria"),
("gosto de ficar no seu aconchego", "alegria"),
("fiz a adesão ao curso hoje","alegria"),
("eu sou admirada por muitos","alegria"),
("adoro como você","alegria"),
("adoro seu cabelo macio","alegria"),
("adoro a cor dos seus olhos","alegria"),
("somo tão amáveis um com o outro","alegria"),
("sinto uma grande afeição por ele","alegria"),
("quero agradar meus filhos", "alegria"),
("me sinto completamente amado", "alegria"),
("eu amo você", "alegria"),
("que grande alívio", "alegria"),
("a dor esta amenizando finalmente", "alegria"),
("acho que me apaixonei", "alegria"),
("amar é maravilhoso", "alegria"),
("estou me sentindo muito animada", "alegria"),
("me sinto muito bem hoje", "alegria"),
("como o luar é belo", "alegria"),
("o dia esta muito bonito","alegria"),
("nossa como sou afortunado","alegria"),
("as maravilhas do mundo","alegria"),
("recebi muito carinho hoje do meus colegas","alegria"),
("estou me sentindo reconfortada hoje", "alegria"),
("é muito bom estar com os amigos", "alegria"),
("estou muito contente com o resultado dos testes","alegria"),
("essa pintura esta bem brilhante","alegria"),
("temos água em abundância","alegria"),
("que roupa delicada","alegria"),
("você é um grande comediante","alegria"),
("que bondade a sua em vir aqui","alegria"),
("o amor é lindo","alegria"),
("nossa amizade vai durar para sempre","alegria"),
("estou eufórica com a notícia","alegria"),
("ele é realmente fiel a mim","alegria"),
("vou dar uma grande festa para comemorar meu aniversário","alegria"),
("graças a deus que eu enxerguei o certo","alegria"),
("essa é a melhor escolhas de todas","alegria"),
("o mais incrível é você minha bela","alegria"),
("é tão engraçado tentar explicar","alegria"),
("é emocionante estar neste lugar","alegria"),
("estou cativada pelo seu olhar","alegria"),
("estou loucamente apaixonada","alegria"),
("eu nunca tive dúvidas","alegria"),
("estou rodeada pelo seu abraço","alegria"),
("eu vejo estrelas pelo caminho","alegria"),
("eu sinto o sol sempre que você esta por perto","alegria"),
("eu estou sorrindo de orelha a orelha","alegria"),
("isso vale a pena","alegria"),
("finalmente você colocou meu amor em primeiro lugar","alegria"),
("nós dançamos noite adentro","alegria"),
("seu amor é brilhante","alegria"),
("toquei muitos corações durante o meu caminho","alegria"),
("eu serei sua amiga e companheira","alegria"),
("você me traz de volta a vida","alegria"),
("você e como um sonho doce","alegria"),
("adoro este doce de frutas","alegria"),
("meu suco favorito","alegria"),
("estou agradecida pela ajuda","alegria"),
("é um enorme prazer ter você em nossa equipe","alegria"),
("trabalhar em equipe é o melhor","alegria"),
("me sinto flutuando no ar","alegria"),
("a brisa esta agradável hoje","alegria"),
("ótimo e compatível","alegria"),
("somos compatíveis um com o outro","alegria"),
("o órgão é compatível com o paciente","alegria"),
("estou contente fui aceita na faculdade","alegria"),
("fui aprovada no meu exame","alegria"),
("fui beneficiada pela minha empresa","alegria"),
("eu sou muito cativante","alegria"),
("estou contente com o apoio","alegria"),
("como este lugar e confortável","alegria"),
("e bom estar quente neste frio","alegria"),
("um elogio nunca e demais","alegria"),
("vou te chamar para comemorar","alegria"),
("é desejável a sua presença em nossa apresentação","alegria"),
("sou muito grata a você","alegria"),
("me dedico muito naquilo que faço","alegria"),
("estou completamente apaixonada","alegria"),
("vamos agitar essa noite","alegria"),
("você significa muito para mim","alegria"),
("vamos agir sem preconceitos e julgamentos","alegria"),
("finalmente completei a minha coleção maravilhoso","alegria"),
("eu sou sua rainha","alegria"),
("satisfatoriamente eu anuncio o vencedor dos jogos","alegria"),
("você me atrai facilmente","alegria"),
("aquele rapaz e extremamente atraente","alegria"),
("sinto-me viva","alegria"),
("sinto-me em paz","alegria"),
("estamos tendo muito lucro","alegria"),
("muito bem esta tudo em ordem agora","alegria"),
("podemos arrumar um emprego juntos","alegria"),
("a arrumação esta terminada que alívio","alegria"),
("o câncer é benigno","alegria"),
("o amor é abundante","alegria"),
("vamos ser caridosos este natal","alegria"),
("com todo esse charme você irá atrair a todos","alegria"),
("nossa como você é charmoso querido","alegria"),
("sou querida pelos meu amigos","alegria"),
("seja cuidadoso com os meus sentimentos","alegria"),
("estou comovido com tamanha caridade","alegria"),
("um chá quente e reconfortante","alegria"),
("que alegria ter vocês aqui","alegria"),
("vamos aplaudir o vencedor","alegria"),
("palmas para a aniversariante","alegria"),
("desejo a você tudo de bom","alegria"),
("hora de apreciar um bom vinho","alegria"),
("aprecio sua presença em minha escola","alegria"),
("anseio por seus próximos trabalhos","alegria"),
("maravilhoso jogo amistoso","alegria"),
("e ótimo que os menimos tenham se apaziguado","alegria"),
("concretizei finalmente meu sonho","alegria"),
("eu imploro não me matem!","medo"),
("tem certeza que não é perigoso?","medo"),
("não tenho certeza se é seguro","medo"),
("tenho que correr pra não me pegarem","medo"),
("socorro! ele queria roubar os meus doces!","medo"),
("esse cara está me perseguindo","medo"),
("não entro lá é um lugar muito perigoso","medo"),
("este lugar continua assustador","medo"),
("na selva tem muitos animais perigosos","medo"),
("avancem com cautela","medo"),
("este lugar está silencioso de mais cuidado!","medo"),
("por favor deixe-me viver!","medo"),
("vou ficar sem mesada se tirar nota baixa","medo"),
("parece que tem olhos nos vigiando","medo"),
("eu temo que a sentença do juiz possa ser negativa","medo"),
("mas essa missão é arriscada","medo"),
("salvem-se quem puder!","medo"),
("meu plano pode ser descoberto","medo"),
("não tive culpa juro não fui eu","medo"),
("tenho que tomar cuidado com o lobisomem","medo"),
("se eu não achar ele vai descobrir a verdade","medo"),
("meu deus ele desapareceu!","medo"),
("tomara que eles não me vejam daqui!","medo"),
("mantenha isso em segredo se descobrirem estaremos ferrados","medo"),
("por favor me soltem eu sou inocente","medo"),
("estou ouvindo passos atrás de mim","medo"),
("eu vou pedir socorro!","medo"),
("cuidado com as curvas na estrada","medo"),
("não sei não parece perigoso","medo"),
("estou tremendo de medo!","medo"),
("socorro eu vou cair!","medo"),
("eu não vou até a floresta negra é muito perigoso","medo"),
("ouço passos na minha direção","medo"),
("acho que está arriscado de mais","medo"),
("vamos voltar é muito perigoso","medo"),
("fuja se não acabaremos mortos","medo"),
("receio por não me livrar desta situação","medo"),
("socorro! ele está armado!","medo"),
("ei cuidado você vai bater no poste!","medo"),
("socorro nós estamos afundando","medo"),
("e sério cuidado com essa arma!","medo"),
("os tubarões estão atacando!","medo"),
("sinto arrepios quando fico sozinho no escuro","medo"),
("calma eu não estou com o dinheiro","medo"),
("eu acho que estou sendo enganado","medo"),
("ligeiro temos que fugir depressa","medo"),
("tem um crocodilo selvagem vindo para cá","medo"),
("se ficarmos quietos eles não vão nos achar","medo"),
("fuja! o tigre parece faminto","medo"),
("estou sem saída preciso de um milagre","medo"),
("tire isso de mim! socorro!","medo"),
("não sei nadar vou me afogar!","medo"),
("não tenho certeza se e seguro","medo"),
("vou apanhar se meus pais verem meu boletim","medo"),
("não consigo sair daqui!","medo"),
("se sair tão tarde poderei ser assaltada","medo"),
("não me deixe por favor!","medo"),
("espere não pode me largar aqui sozinho","medo"),
("temo pela sua segurança","medo"),
("eu te entrego o dinheiro por favor não me mate!","medo"),
("ele vai levar todo o meu dinheiro","medo"),
("não dirija tão rápido assim","medo"),
("me descobriram irão me prender!","medo"),
("só espero que não me façam nenhum mal","medo"),
("vou me afogar me ajudem a sair da água","medo"),
("não estaremos a salvo aqui","medo"),
("não quero nem pensar no que pode acontecer","medo"),
("nessa cidade é uma desgraça atrás da outra","medo"),
("alguém esta me ligando estou assustado","medo"),
("isso não é remedio não me matem","medo"),
("eu não confio nele tenho que ter cautela","medo"),
("muita cautela","medo"),
("vou ser descoberto meu deus","medo"),
("receio que terei de ir","medo"),
("a noite e muito perigosa","medo"),
("estou estremecendo com essa casa","medo"),
("olha aquela criatura se movendo monstruosamente","medo"),
("não aguento este suspense", "medo"),
("afugente os cães","medo"),
("estou chocado e amedrontado com este assassinato brutal", "medo"),
("é preciso afugenta com ímpeto este medo do inferno", "medo"),
("políticos usam suas forças para afugentar e amedrontar o povo", "medo"),
("o objetivo disso e apenas me amedrontar mais", "medo"),
("isso me apavora", "medo")]

baseTeste = [
("não precisei pagar o ingresso","alegria"),
("se eu ajeitar tudo fica bem","alegria"),
("minha fortuna ultrapassará a sua","alegria"),
("sou muito afortunado","alegria"),
("é benéfico para todos esta nova medida","alegria"),
("ficou lindo","alegria"),
("achei esse sapato muito simpático","alegria"),
("estou ansiosa pela sua chegada","alegria"),
("congratulações pelo seu aniversário","alegria"),
("delicadamente ele a colocou para dormir","alegria"),
("a música é linda","alegria"),
("sem música eu não vivo","alegria"),
("concluí uma tarefa muito difícil","alegria"),
("concluí minha graduação","alegria"),
("estou muito contente com tudo","alegria"),
("eu confio em você","alegria"),
("é um prazer conhecê-lo","alegria"),
("o coleguismo de vocês é animador","alegria"),
("estou aproveitando as férias","alegria"),
("vamos aproveitar as férias","alegria"),
("é muito divertido este jogo","alegria"),
("vamos ter muita diversão","alegria"),
("não achei que me divertiria tanto assim","alegria"),
("vou consentir o orçamento ao cliente","alegria"),
("com o consentimento dos meus pais podemos nos casar","alegria"),
("eu adorei este perfume","alegria"),
("sua bondade é cativante","alegria"),
("estou despreocupada","alegria"),
("não me preocupo com o que aconteceu","alegria"),
("me sinto completamente segura","alegria"),
("estimo muito o seu trabalho","alegria"),
("somos estimados por nossa família","alegria"),
("concretizamos nossa ideia","alegria"),
("nosso ideal foi alcançado","alegria"),
("estamos muito felizes juntos","alegria"),
("estou tão animada com os preparativos para o casamento","alegria"),
("você será muito amado meu filho","alegria"),
("os apaixonados sãoo maravilhosos","alegria"),
("agradeço imensamente o seu apoio nestes dias","alegria"),
("esta comida me parece muito atraente","alegria"),
("você me completa","alegria"),
("poderemos completar o projeto hoje!","alegria"),
("estamos namorando","alegria"),
("estou namorando este vestido a um tempo","alegria"),
("pude comprar meu celular hoje","alegria"),
("e um deleite poder compartilhar minhas vitórias","alegria"),
("ela é um boa garota","alegria"),
("estivemos em um útimo show","alegria"),
("que abominável esse monstro!","medo"),
("vamos alarmar a todos sobre a situação","medo"),
("estou amedrontada","medo"),
("estou com muito medo da noite","medo"),
("ele esta me ameaçando a dias","medo"),
("quanta angústia","medo"),
("estou angustiada","medo"),
("angustiadamente vou sair de casa","medo"),
("isso me deixa apavorada","medo"),
("você esta me apavorando","medo"),
("estou desconfiada de você","medo"),
("não confio em você","medo"),
("atá o cachorro está apavorado","medo"),
("estou assustado com as atitudes do meu colega","medo"),
("agora se sente humilhado apavorado","medo"),
("assustou a população e provocou mortes","medo"),
("estou com dificuldades para respirar e muito assustado","medo"),
("os policiais se assustaram quando o carro capotou","medo"),
("o trabalhador é assombrado pelo temor do desemprego","medo"),
("este lugar é mal assombrado","medo"),
("estou assombrado pela crise financeira","medo"),
("mesmo aterrorizado lembro de você","medo"),
("aterrorizado e suando frio","medo"),
("um grupo de elefantes selvagens tem aterrorizado vilas","medo"),
("me sinto intimidada pela sua presença","medo"),
("tenho medo de ser advertida novamente","medo"),
("estou correndo o risco de ser advertido","medo"),
("estou correndo riscos","medo"),
("os riscos são reais","medo"),
("podemos perder muito dinheiro com essa investida","medo"),
("socorro fui intimado a depor","medo"),
("fui notificado e estou com medo de perder a guarda da minha filha","medo"),
("estou angustiada com meus filhos na rua","medo"),
("e abominável o que fazem com os animais","medo"),
("foi terrível o tigre quase o matou","medo"),
("me advertiram sobre isso","medo")]

stopwords = nltk.corpus.stopwords.words('portuguese')
stopwords.append("muito")
stopwords.append("muitos")
stopwords.append("muita")
stopwords.append("muitos")
stopwords.append("meu")
stopwords.append("meus")
stopwords.append("minha")
stopwords.append("trabalho")
stopwords.append("sou")
stopwords.append("seu")
stopwords.append("hoje")
stopwords.append("tão")
stopwords.append("me")
stopwords.append("quero")
stopwords.append("queria")
np.transpose(stopwords)

base = pd.DataFrame(baseTreinamento)

radPositivos = []
radNegativos = []
def analiseBase(baseDados):
   
    base.columns = ["frase", "sentimento"]

    print("Tamanho da base de treinamento: {}".format(base.shape[0]))

    print(" ")
    print(base.sentimento.value_counts())
    print(" ")

    print("Percentual de algria / medo na base")
    print(base.sentimento.value_counts() / base.shape[0] * 100)

def removeStopWords(baseDados):
    baseTesteSemStopwords = []
    textToken = []
    for frase in baseDados:
        textToken = word_tokenize(frase)
        baseTesteSemStopwords.append(textToken)

        for w in textToken:
            if w in stopwords:
                textToken.remove(w) 

    return baseTesteSemStopwords

def applySteam(baseDados):
    stemmer = nltk.stem.RSLPStemmer()
    for (palavra, sentimentos) in baseDados:
        if sentimentos == "alegria":
            comSteam = [str(stemmer.stem(p)) for p in palavra.split() if p not in stopwords]
            radPositivos.append(comSteam)
        else: 
            comSteam = [str(stemmer.stem(p)) for p in palavra.split() if p not in stopwords]
            radNegativos.append(comSteam)

adjustedPositiveRadicals = []
adjustedNegativeRadicals = []
def adjustRadicalBase():
    for i in radPositivos:
        for j in i:
            adjustedPositiveRadicals.append(j)

    for k in radNegativos:
        for l in k:
            adjustedNegativeRadicals.append(l)

def searchWords(frases):
    all = []
    for (palavra, sentimento) in frases:
        all.extend(palavra)
    return all

def frequency(words):
    return nltk.FreqDist(words)

def uniqueWords(frequencia):
    freq = frequencia.keys()
    return freq

def apllySteam1(texto):
    stemmer = nltk.stem.RSLPStemmer()
    frases = []
    for(palavras, sentimento) in texto:
        com = [str(stemmer.stem(p)) for p in palavras.split() if p not in stopwords]
        frases.append((com, sentimento))

    return frases

#BASE TREINAMENTO
print("BASE DE TREINAMENTO")
print("-------------------------------------------------------------------------------------------------------------------------------------------------")
print(" ")
analiseBase(baseTreinamento)
print(" ")

print("REMOVE STOP WORDS")
print(removeStopWords(base.frase))
print(" ")

print("STEAM")
applySteam(baseTreinamento)
print(" ")


print("MOST USED RADICALS")
adjustRadicalBase()
print(" ")
print("Positive Radicals")
print(adjustedPositiveRadicals)
print(" ")
print("Negative Radicals")
print(adjustedNegativeRadicals)
print(" ")


frequenciaPostivos = frequency(adjustedPositiveRadicals)
print("Frequency Positive Radicals")
print(frequenciaPostivos.most_common(20))
print(" ")

frequenciaNegativos = frequency(adjustedNegativeRadicals)
print("Frequency Negative Radicals")
print(frequenciaNegativos.most_common(20))
print(" ")

freq_neg = uniqueWords(frequenciaNegativos)
print(freq_neg)

freq_pos = uniqueWords(frequenciaPostivos)
print(freq_pos)

print(" ")
print("ALL RADICALS")
allRadicals = adjustedPositiveRadicals + adjustedNegativeRadicals
print(allRadicals)

freqAll = frequency(allRadicals)
uniqueAll = uniqueWords(freqAll)
print(uniqueAll)

def extract(documento):
    doc = set(documento)
    car = {}
    for palavras in uniqueAll:
        car['%s' % palavras] = (palavras in doc)
    return car

ssteam = apllySteam1(baseTreinamento)

baseCOMPLETAtreinamento = nltk.classify.apply_features(extract, ssteam)
classificador = nltk.NaiveBayesClassifier.train(baseCOMPLETAtreinamento)
print(classificador.labels())
print(classificador.show_most_informative_features(10))
print(" ")

print("Acurácia do modelo")
print(nltk.classify.accuracy(classificador,baseCOMPLETAtreinamento))
print("-------------------------------------------------------------------------------------------------------------------------------------------------")
print(" ")
print(" ")
#BASE TREINAMENTO




#BASE TESTE
print("BASE DE TESTE")
print("-------------------------------------------------------------------------------------------------------------------------------------------------")
base = pd.DataFrame(baseTeste)
analiseBase(baseTeste)
print(" ")

print("REMOVE STOP WORDS")
print(removeStopWords(base.frase))
print(" ")

print("STEAM")
applySteam(baseTeste)
print(" ")


print("MOST USED RADICALS")
adjustRadicalBase()
print(" ")
print("Positive Radicals")
print(adjustedPositiveRadicals)
print(" ")
print("Negative Radicals")
print(adjustedNegativeRadicals)
print(" ")


frequenciaPostivos = frequency(adjustedPositiveRadicals)
print("Frequency Positive Radicals")
print(frequenciaPostivos.most_common(20))
print(" ")

frequenciaNegativos = frequency(adjustedNegativeRadicals)
print("Frequency Negative Radicals")
print(frequenciaNegativos.most_common(20))
print(" ")

freq_neg = uniqueWords(frequenciaNegativos)
print(freq_neg)

freq_pos = uniqueWords(frequenciaPostivos)
print(freq_pos)

print(" ")
print("ALL RADICALS")
allRadicals = adjustedPositiveRadicals + adjustedNegativeRadicals
print(allRadicals)

freqAll = frequency(allRadicals)
uniqueAll = uniqueWords(freqAll)
print(uniqueAll)

def extract(documento):
    doc = set(documento)
    car = {}
    for palavras in uniqueAll:
        car['%s' % palavras] = (palavras in doc)
    return car

ssteam = apllySteam1(baseTeste)

baseCOMPLETAteste = nltk.classify.apply_features(extract, ssteam)
classificador = nltk.NaiveBayesClassifier.train(baseCOMPLETAteste)
print(classificador.labels())
print(classificador.show_most_informative_features(10))
print(" ")

print("Acurácia do modelo")
print(nltk.classify.accuracy(classificador,baseCOMPLETAteste))
print("-------------------------------------------------------------------------------------------------------------------------------------------------")
#BASE TESTE


palavras_treinamento = searchWords(ssteam)
def analiseDeSentimentoNaFrase(frase):
    testeSteam = []
    stemmer = nltk.stem.RSLPStemmer()
    for palavras_treinamento in frase.split():
        com = [p for p in palavras_treinamento.split()]
        testeSteam.append(str(stemmer.stem(com[0])))
    
    novo = extract(testeSteam)

    distribuicao = classificador.prob_classify(novo)
    for classe in distribuicao.samples():
        print('%s : %f' % (classe, distribuicao.prob(classe)))

print("ANÁLISE DA FRASE")
analiseDeSentimentoNaFrase("me advertiram sobre isso")