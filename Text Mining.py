# -*- coding: utf-8 -*-
"""Text mining.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MiTcHXh82WXfr5fuZ4u8-xLlg8B3sOO_
"""

from os import write
#Alunos: Amanda Constante, Karoline Custódio, Vitor Moraes e Matheus Boing 
#Juntamos as duas bases de dados

#Tarefa 4: Pré-processamento de texto e extração das informações
#Utilizando a base de dados data_endereco.txt, realizar pré-processamento de texto e extração das informações:
#- logradouro
#- nro
#- complemento
#- bairro
#- cidade
#- uf
#- cep
#***  gerar um arquivo .CSV com os campos

import requests
import csv

textoSimples = ["RUA PADRE GABRIEL BOLZAN, 1777 CASA 8    SÃO JOSÉ     SANTA MARIA   RS   CEP 97095500",
"R. ANDRADAS 1310 AP 101  CENTRO   SANTA MARIA   RS   CEP 97010-033",
"RUA PARAÍBA, 147 APTO 1010 VITOR KONDER BLUMENAU SC CEP. 89012130",
"RUA PARAÍBA, 147 1009 VITOR KONDER BLUMENAU SC CEP 86012130",
"AVENIDA PRESIDENTE VARGAS, 650 PATRONATO STA. MARIA 97010-033",
"AV PRESIDENTE VARGAS, 100 PATRONATO STA. MARIA CEP:  97010033",
"R FELIX  ANGEL 86 601   CENTRO   NOVA PRATA   RS   CEP", 
"AV GUAPORE 530 CASA   PETROPOLIS   POA   RS   CEP 90470230",
"RUA NEY DA GAMA  AHRENDS 565 404   PROTASIO ALVES   POA   RS   CEP 91450345",
"R GAL NETTO, 592  302      RIO GRANDE   RS   CEP", 
"RUA XAVIER DA CUNHA, 999  AP 503   CRISTAL   PORTO ALEGRE   RS   CEP 90830430", 
"                                         PORTO ALEGRE   RS   CEP 90830430",
"RUA ARARIPE JUNIOR,112     DORES   STA MARIA   RS   CEP 97050050",
"AV ESTRELA 393 PARQUE IPIRANGA   GRAVATAI   RS   CEP 94110357",
"AVENIDA MANOEL ELIAS, NO 2200 AP 606, BLOCO 01   PASSO DAS PEDRAS   PORTO ALEGRE   RS   CEP 91240260,"
"RUA PADRE GABRIEL BOLZAN  , 1777 CASA 1    SÃO JOSE     SANTA MARIA   RS   CEP",
"Rua ANDRADAS 1310 AP 101 BLOCO 2  CENTRO   SANTA MARIA   RS   CEP 97010-033",
"RUA PARAiBA, 147 APTO 1010 VITOR KONDER     CEP. 89012130",
"RUA PARAÍBA, 147 VITOR KONDER BLUMENAU SC CEP 12130",
"AV. PRES VARGAS, 650 PATRONATO STA. MARIA 97010-033",
"AV PRESIDENTE VARGAS, 100 PATRONATO STA. MARIA CEP 97010033",
"R FELIX  ANGEL    CENTRO   NOVA PRATA   RS   CEP" ,
"AV GUAPORE 530 CASA   PETROPOLIS 00   PORTO  RS   CEP 90470230",
"RUA NEY DA GAMA  AHRENDS 565 404   PROTASIO ALVES   POA   RS   CEP 91450345",
"R GAL NETTO, 592  302      RIO GRANDE   RS   CEP ",
"RUA XAVIER DA CUNHA, 999  AP 503   CRISTAL   PORTO ALEGRE   RS   CEP 90830430 ",
"PORTO ALEGRE   RS   CEP 90830430",
"RUA ARARIPE JUNIOR,112     DORES   STA MARIA   RS   CEP 97050050",
"AV ESTRELA 393 PARQUE IPIRANGA   GRAVATAI   RS   CEP 94110357",
"AVENIDA MANOEL ELIAS, NO 2200 AP 606, BLOCO 01   PASSO DAS PEDRAS   PORTO ALEGRE   RS   CEP ",
"R. ANDRADAS         CAMOBI  SANTA MARIA   RS   CEP 97010-033",
"RUA             PORTO ALEGRE   RS   CEP 90830430 ",
"PORTO ALEGRE   RS   CEP 90830430",
"RUA ARARIPE JUNIOR ,112     DORES   STA MARIA   RS   CEP 97050050",
"AV ESTRELA 393 PARQUE IPIRANGA RS   CEP ",
"AVENIDA MANOEL ELIAS,    PASSO DAS PEDRAS   PORTO ALEGRE   RS"]

def hasCep(string):      
    for j in string:
        if len(j) == 8:
            try:
                cep = int(j)
                return True
            except:
                continue 
        elif "-" in j:
            scep = j.replace("-", "")
            return True 

    return False

# print(textoSimples.split())
ceps = []
logradouros = []

for i in textoSimples:
    isplit = i.split()

    # se i contém n contem uma palavra com 8 digitod que pode ser convertida
    if not hasCep(isplit):
        logradouros.append(i.replace("CEP", "").rstrip().split())

        

    for j in isplit:
        if len(j) == 8:
            try:
                cep = int(j)
                ceps.append(cep)
            except:
                continue
        elif "-" in j:
            scep = j.replace("-", "")
            cep = int(scep)
            print(scep)
            ceps.append(cep)

endereco01 = logradouros[0]
endereco02 = logradouros[1]

def buscaEndereco(estado, cidade, rua):
    link = f'https://viacep.com.br/ws/{estado}/{cidade}/{rua}/json/'
    print(link)
    requisicao = requests.get(link)
    dic_requisicao = requisicao.json()

    if len(dic_requisicao) > 0:
        cep = dic_requisicao[0]['cep']
        return cep

def busca_cep(cep):
    link = f'https://viacep.com.br/ws/{cep}/json/'
    requisicao = requests.get(link)
    dic_requisicao = requisicao.json()
    if len(dic_requisicao) > 0:
        uf = dic_requisicao.get('uf')
        cidade = dic_requisicao.get('localidade')
        bairro = dic_requisicao.get('bairro')
        logradouro = dic_requisicao.get('logradouro')
        return dic_requisicao


endrua01 = "" + endereco01[1] +" "+ endereco01[2]
endcidade01 =  "" + endereco01[6] +" "+ endereco01[7]
cepCompleto01 = buscaEndereco(endereco01[8], endcidade01 , endrua01)

endrua02 = "" + endereco02[1] +" "+ endereco02[2].replace(",", "")
endcidade02 =  "" + endereco02[5] +" "+ endereco02[6]
cepCompleto02 = buscaEndereco(endereco02[7], endcidade02 , endrua02)

cepsCompletos = []
for i in ceps:
    cepsCompletos.append(busca_cep(i))

data = []
for endereco in cepsCompletos:
    data.append([endereco.get("cep"), endereco.get("logradouro"), endereco.get("complemento"), endereco.get("bairro"), 
                  endereco.get("localidade"), endereco.get("uf"), endereco.get("ibge"), endereco.get("gia"), endereco.get("ddd"), endereco.get("siafi") ])
header = ['cep', 'logradouro', 'complemento', 'bairro', 'localidade', 'uf', 'ibge', 'gia', 'ddd', 'siafi']
with open('data.csv', 'w', encoding='UTF8') as f:
    writer = csv.writer(f)

    # write the header
    writer.writerow(header)

    for i in data: 
        writer.writerow(i)
        
import pandas as pd 
with open('data.csv') as csvfile:
    a = pd.read_csv(csvfile) 
    a.to_html("Table.htm") 
    html_file = a.to_html() 
    print(html_file)

