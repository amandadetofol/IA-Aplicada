# -*- coding: utf-8 -*-
"""Trabalho de IA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gMk1Sf4IblJ07WQNIVT6Ng9yeNrkxRcN
"""

#Amanda Constante
#Matheus Boing
#Karoline Custódio 
#Vitor Moraes

import numpy as np
import matplotlib.pyplot as plt

x1 = [10,8,13,9,11,14,6,4,12,7,5]
y1 = [8.04,6.95,7.58,8.81,8.33,9.96,7.24,4.26,10.84,4.82,5.68]
 

x2 = [10,8,13,9,11,14,6,4,12,7,5]
y2 = [9.14,8.14,8.47,8.77,9.26,8.10,6.13,3.10,9.13,7.26,4.74]


x3 = [8,8,8,8,8,8,8,8,8,8,19]
y3 = [6.58,5.76,7.71,8.84,8.47,7.04,5.25,5.56,7.91,6.89,12.50]

def correlacao(dataX, dataY):
    media_x = sum(dataX)/len(dataX)
    media_y = sum(dataY)/len(dataY) 

    a = []
    b = []
    c = []

    for i in range(0, len(dataX)):
        a.append((dataX[i]-media_x)*(dataY[i]-media_y))
        b.append((dataX[i]-media_x)**2)
        c.append((dataY[i]-media_y)**2)
    
    sum_a = sum(a) 
    sum_b = sum(b) 
    sum_c = sum(c)

    global r

    r = sum_a / np.sqrt((sum_b)*(sum_c))

    return r

def regressao(x, y):
    x_barra2 = sum(x)/len(x)
    y_barra2 = sum(y)/len(y)

    a2 = []
    b2 = []

    for i in range(0, len(x)):
        a2.append((x[i]-x_barra2)*(y[i]-y_barra2))
        b2.append((x[i]-x_barra2)**2)    
    
    a2sum = sum(a2)
    b2sum = sum(b2)

    global beta1
    beta1 = a2sum/b2sum

    global beta0 
    beta0 = y_barra2 - beta1 * x_barra2 

    global ychapeu 
    ychapeu = []

    for j in range(len(x)):
        ychapeu.append(beta0 + beta1 * x[j])

    return beta0, beta1, ychapeu 

#para o primeiro dataset 
correlacao(x1,y1)
regressao(x1,y1)
plt.figure(1)
plt.scatter(x1,y1, color="black", label="Dispersão")
plt.plot(x1, ychapeu, 'r', label="Linha de regressão", )
plt.title('R = '+str(r)+', B0= '+str(beta0)+', B1 = '+str(beta1))
plt.ylabel('y')
plt.xlabel('x')
plt.legend()
plt.show()

#para o segundo dataset
correlacao(x2,y2)
regressao(x2,y2)
plt.figure(1)
plt.scatter(x1,y1, color="black", label="Dispersão")
plt.plot(x1, ychapeu, 'r', label="Linha de regressão", )
plt.title('R = '+str(r)+', B0= '+str(beta0)+', B1 = '+str(beta1))
plt.ylabel('y')
plt.xlabel('x')
plt.legend()
plt.show()
 
#para o terceiro dataset
correlacao(x3,y3)
regressao(x3,y3)
plt.figure(1)
plt.scatter(x1,y1, color="black", label="Dispersão")
plt.plot(x1, ychapeu, 'r', label="Linha de regressão", )
plt.title('R = '+str(r)+', B0= '+str(beta0)+', B1 = '+str(beta1))
plt.ylabel('y')
plt.xlabel('x')
plt.legend()
plt.show()

#3)  Qual dos datasets não é apropriado para regressão linear?
# O segundo dataset é o mais inapropriado para regressão, pois quanto mais próximo de -1
# mais fraca é a correlação.

